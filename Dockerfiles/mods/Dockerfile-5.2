# Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-mods.j2 instead.
FROM devilbox/php-fpm:5.2-base as builder


###
### Install
###
RUN set -eux \
	&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \
		firebird-dev \
		freetds-dev \
		libbz2-dev \
		libc-client-dev \
		libcurl4-openssl-dev \
		libenchant-dev \
		libevent-dev \
		libfbclient2 \
		libfreetype6-dev \
		libib-util \
		libicu-dev \
		libjpeg-dev \
		libkrb5-dev \
		libldap2-dev \
		libmagic-dev \
		libmcrypt-dev \
		libmemcached-dev \
		libpcre3-dev \
		libpng-dev \
		libpq-dev \
		libpspell-dev \
		librabbitmq-dev \
		librecode-dev \
		libsasl2-dev \
		libsnmp-dev \
		libssl-dev \
		libtidy-dev \
		libvpx-dev \
		libxml2-dev \
		libxpm-dev \
		libxslt-dev \
		snmp \
		zlib1g-dev \
		ca-certificates \
		git


# Fix timezone (only required for testing to stop php -v and php-fpm -v from complaining to stderr)
RUN set -eux \
	&& echo "date.timezone=UTC" > /usr/local/etc/php/php.ini


###
### Install and enable PHP modules
###
# Enable ffi if it exists
RUN set -eux \
	&& if [ -f /usr/local/etc/php/conf.d/docker-php-ext-ffi.ini ]; then \
			echo "ffi.enable = 1" >> /usr/local/etc/php/conf.d/docker-php-ext-ffi.ini; \
		fi

# -------------------- Installing PHP Extension: ioncube --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Custom extension
	&& EXTENSION_DIR="$( php -i | grep ^extension_dir | awk -F '=>' '{print $2}' | xargs )" \
&& if [ ! -d "${EXTENSION_DIR}" ]; then mkdir -p "${EXTENSION_DIR}"; fi \
&& curl https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz -L -o ioncube.tar.gz \
&& tar xvfz ioncube.tar.gz \
&& cd ioncube \
&& cp "ioncube_loader_lin_5.2.so" "${EXTENSION_DIR}/ioncube.so" \
&& cd ../ \
&& rm -rf ioncube \
&& rm -rf ioncube.tar.gz \
 \
	&& true


# -------------------- Installing PHP Extension: amqp --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install amqp-1.4.0 \
	# Enabling
	&& docker-php-ext-enable amqp \
	&& true


# -------------------- Installing PHP Extension: bcmath --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) bcmath \
	&& true


# -------------------- Installing PHP Extension: bz2 --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) bz2 \
	&& true


# -------------------- Installing PHP Extension: calendar --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) calendar \
	&& true


# -------------------- Installing PHP Extension: dba --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) dba \
	&& true


# -------------------- Installing PHP Extension: enchant --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Custom:       Pecl command
	&& echo "/usr" | pecl install enchant \
	# Enabling
	&& docker-php-ext-enable enchant \
	&& true


# -------------------- Installing PHP Extension: exif --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) exif \
	&& true


# -------------------- Installing PHP Extension: fileinfo --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install fileinfo \
	# Enabling
	&& docker-php-ext-enable fileinfo \
	&& true


# -------------------- Installing PHP Extension: ftp --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure ftp --with-openssl-dir \
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) ftp \
	&& true


# -------------------- Installing PHP Extension: gd --------------------
RUN set -eux \
	# Version specific pre-command
	&& ln -s /usr/lib/x86_64-linux-gnu/libjpeg.* /usr/lib/ && \
ln -s /usr/lib/x86_64-linux-gnu/libpng.* /usr/lib/ && \
ln -s /usr/lib/x86_64-linux-gnu/libXpm.* /usr/lib/ && \
mkdir /usr/include/freetype2/freetype && \
ln -s /usr/include/freetype2/freetype.h /usr/include/freetype2/freetype/freetype.h \
 \
	# Installation: Version specific
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure gd --with-gd --with-jpeg-dir=/usr --with-png-dir=/usr --with-zlib-dir=/usr --with-xpm-dir=/usr --with-freetype-dir=/usr --enable-gd-native-ttf \
	# Installation
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) gd \
	&& true


# -------------------- Installing PHP Extension: gettext --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) gettext \
	&& true


# -------------------- Installing PHP Extension: igbinary --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install igbinary-2.0.7 \
	# Enabling
	&& docker-php-ext-enable igbinary \
	&& true


# -------------------- Installing PHP Extension: imap --------------------
RUN set -eux \
	# Generic pre-command
	&& ln -s /usr/lib/x86_64-linux-gnu/libkrb5* /usr/lib/ \
	# Installation: Generic
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure imap --with-kerberos --with-imap-ssl --with-imap \
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) imap \
	&& true


# -------------------- Installing PHP Extension: interbase --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) interbase \
	&& true


# -------------------- Installing PHP Extension: intl --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install intl \
	# Enabling
	&& docker-php-ext-enable intl \
	&& true


# -------------------- Installing PHP Extension: ldap --------------------
RUN set -eux \
	# Generic pre-command
	&& ln -s /usr/lib/x86_64-linux-gnu/libldap* /usr/lib/ \
	# Installation: Generic
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure ldap --with-ldap --with-ldap-sasl \
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) ldap \
	&& true


# -------------------- Installing PHP Extension: mcrypt --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         Built-in extension
	# Installation
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) mcrypt \
	&& true


# -------------------- Installing PHP Extension: msgpack --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install msgpack-0.5.7 \
	# Enabling
	&& docker-php-ext-enable msgpack \
	&& true


# -------------------- Installing PHP Extension: memcache --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install memcache-2.2.7 \
	# Enabling
	&& docker-php-ext-enable memcache \
	&& true


# -------------------- Installing PHP Extension: memcached --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install memcached-2.1.0 \
	# Enabling
	&& docker-php-ext-enable memcached \
	&& true


# -------------------- Installing PHP Extension: mongo --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Custom:       Pecl command
	&& yes yes | pecl install mongo-1.5.8 \
	# Enabling
	&& docker-php-ext-enable mongo \
	&& true


# -------------------- Installing PHP Extension: oauth --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install oauth-1.2.3 \
	# Enabling
	&& docker-php-ext-enable oauth \
	&& true


# -------------------- Installing PHP Extension: opcache --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Custom:       Pecl command
	&& pecl install zendopcache \
	# Enabling
	&& docker-php-ext-enable opcache \
	&& true


# -------------------- Installing PHP Extension: pcntl --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pcntl \
	&& true


# -------------------- Installing PHP Extension: pdo_dblib --------------------
RUN set -eux \
	# Generic pre-command
	&& ln -s /usr/lib/x86_64-linux-gnu/libsybdb.* /usr/lib/ \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pdo_dblib \
	&& true


# -------------------- Installing PHP Extension: pdo_firebird --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pdo_firebird \
	&& true


# -------------------- Installing PHP Extension: pdo_pgsql --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pdo_pgsql \
	&& true


# -------------------- Installing PHP Extension: pgsql --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pgsql \
	&& true


# -------------------- Installing PHP Extension: phar --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install phar \
	# Enabling
	&& docker-php-ext-enable phar \
	&& true


# -------------------- Installing PHP Extension: pspell --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pspell \
	&& true


# -------------------- Installing PHP Extension: recode --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) recode \
	&& true


# -------------------- Installing PHP Extension: redis --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install redis-2.2.7 \
	# Enabling
	&& docker-php-ext-enable redis \
	&& true


# -------------------- Installing PHP Extension: shmop --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) shmop \
	&& true


# -------------------- Installing PHP Extension: snmp --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure snmp --with-openssl-dir \
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) snmp \
	&& true


# -------------------- Installing PHP Extension: sockets --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) sockets \
	&& true


# -------------------- Installing PHP Extension: sysvmsg --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) sysvmsg \
	&& true


# -------------------- Installing PHP Extension: sysvsem --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) sysvsem \
	&& true


# -------------------- Installing PHP Extension: sysvshm --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) sysvshm \
	&& true


# -------------------- Installing PHP Extension: tidy --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         Built-in extension
	# Installation
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) tidy \
	&& true


# -------------------- Installing PHP Extension: uploadprogress --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install uploadprogress \
	# Enabling
	&& docker-php-ext-enable uploadprogress \
	&& true


# -------------------- Installing PHP Extension: wddx --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure wddx --with-libxml-dir=/usr \
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) wddx \
	&& true


# -------------------- Installing PHP Extension: xdebug --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         PECL extension
	# Default:      Pecl command
	&& pecl install xdebug-2.2.7 \
	# Enabling
	&& docker-php-ext-enable xdebug \
	&& true


# -------------------- Installing PHP Extension: xmlrpc --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure xmlrpc --with-libxml-dir=/usr --with-iconv-dir=/usr \
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) xmlrpc \
	&& true


# -------------------- Installing PHP Extension: xsl --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) xsl \
	&& true


# -------------------- Installing PHP Extension: zip --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure zip --with-zlib-dir=/usr --with-pcre-dir=/usr \
	# Installation
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) zip \
	&& true




# Fix php.ini settings for enabled extensions
RUN set -eux \
	&& chmod +x "$(php -r 'echo ini_get("extension_dir");')"/*

# Fix oracle dir for images that don't have oci installed
RUN set -eux \
	&& mkdir -p /usr/lib/oracle/

# Shrink everything down
RUN set -eux \
	&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
	&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
	&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)



# Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-mods.j2 instead.
FROM devilbox/php-fpm:5.2-base as final
MAINTAINER "cytopia" <cytopia@everythingcli.org>

###
### Labels
###
# https://github.com/opencontainers/image-spec/blob/master/annotations.md
#LABEL "org.opencontainers.image.created"=""
#LABEL "org.opencontainers.image.version"=""
#LABEL "org.opencontainers.image.revision"=""
LABEL "maintainer"="cytopia <cytopia@everythingcli.org>"
LABEL "org.opencontainers.image.authors"="cytopia <cytopia@everythingcli.org>"
LABEL "org.opencontainers.image.url"="https://github.com/devilbox/docker-php-fpm"
LABEL "org.opencontainers.image.documentation"="https://github.com/devilbox/docker-php-fpm"
LABEL "org.opencontainers.image.source"="https://github.com/devilbox/docker-php-fpm"
LABEL "org.opencontainers.image.vendor"="devilbox"
LABEL "org.opencontainers.image.licenses"="MIT"
LABEL "org.opencontainers.image.ref.name"="5.2-mods"
LABEL "org.opencontainers.image.title"="PHP-FPM 5.2-mods"
LABEL "org.opencontainers.image.description"="PHP-FPM 5.2-mods"


###
### Copy artifacts from builder
###
ARG EXT_DIR
COPY --from=builder ${EXT_DIR}/ ${EXT_DIR}/
COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/
COPY --from=builder /usr/local/bin/ /usr/local/bin/
COPY --from=builder /usr/local/lib/ /usr/local/lib/
COPY --from=builder /usr/lib/oracle/ /usr/lib/oracle/


###
### Install
###
RUN set -eux \
	&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \
	libaspell15 \
	libc-client2007e \
	libenchant1c2a \
	libfbclient2 \
	libfreetype6 \
	libicu52 \
	libjpeg62-turbo \
	libmcrypt4 \
	libmemcachedutil2 \
	libmysqlclient18 \
	libpng12-0 \
	libpq5 \
	librabbitmq1 \
	librecode0 \
	libsybdb5 \
	libtidy-0.99-0 \
	libvpx1 \
	libxpm4 \
	libxslt1.1 \
	snmp \
	ca-certificates \
	&& rm -rf /var/lib/apt/lists/* \
	\
	&& update-ca-certificates


###
### Post Install
###
###
### Verify
###
RUN set -eux \
	&& echo "date.timezone=UTC" > /usr/local/etc/php/php.ini \
	&& php -v | grep -oE 'PHP\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^5.2' \
	&& /usr/local/sbin/php-fpm --test \
	\
	&& PHP_ERROR="$( php -v 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_ERROR}" ]; then echo "${PHP_ERROR}"; false; fi \
	&& PHP_ERROR="$( php -i 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_ERROR}" ]; then echo "${PHP_ERROR}"; false; fi \
	\
	&& PHP_FPM_ERROR="$( php-fpm -v 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_FPM_ERROR}" ]; then echo "${PHP_FPM_ERROR}"; false; fi \
	&& PHP_FPM_ERROR="$( php-fpm -i 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_FPM_ERROR}" ]; then echo "${PHP_FPM_ERROR}"; false; fi \
	&& rm -f /usr/local/etc/php/php.ini \
	\
	&& php -m | grep -oiE '^amqp$' \
	&& php-fpm -m | grep -oiE '^amqp$' \
	&& php -m | grep -oiE '^bcmath$' \
	&& php-fpm -m | grep -oiE '^bcmath$' \
	&& php -m | grep -oiE '^bz2$' \
	&& php-fpm -m | grep -oiE '^bz2$' \
	&& php -m | grep -oiE '^calendar$' \
	&& php-fpm -m | grep -oiE '^calendar$' \
	&& php -m | grep -oiE '^ctype$' \
	&& php-fpm -m | grep -oiE '^ctype$' \
	&& php -m | grep -oiE '^curl$' \
	&& php-fpm -m | grep -oiE '^curl$' \
	&& php -m | grep -oiE '^dba$' \
	&& php-fpm -m | grep -oiE '^dba$' \
	&& php -m | grep -oiE '^dom$' \
	&& php-fpm -m | grep -oiE '^dom$' \
	&& php -m | grep -oiE '^enchant$' \
	&& php-fpm -m | grep -oiE '^enchant$' \
	&& php -m | grep -oiE '^exif$' \
	&& php-fpm -m | grep -oiE '^exif$' \
	&& php -m | grep -oiE '^fileinfo$' \
	&& php-fpm -m | grep -oiE '^fileinfo$' \
	&& php -m | grep -oiE '^filter$' \
	&& php-fpm -m | grep -oiE '^filter$' \
	&& php -m | grep -oiE '^ftp$' \
	&& php-fpm -m | grep -oiE '^ftp$' \
	&& php -m | grep -oiE '^gd$' \
	&& php-fpm -m | grep -oiE '^gd$' \
	&& php -m | grep -oiE '^gettext$' \
	&& php-fpm -m | grep -oiE '^gettext$' \
	&& php -m | grep -oiE '^hash$' \
	&& php-fpm -m | grep -oiE '^hash$' \
	&& php -m | grep -oiE '^iconv$' \
	&& php-fpm -m | grep -oiE '^iconv$' \
	&& php -m | grep -oiE '^igbinary$' \
	&& php-fpm -m | grep -oiE '^igbinary$' \
	&& php -m | grep -oiE '^imap$' \
	&& php-fpm -m | grep -oiE '^imap$' \
	&& php -m | grep -oiE '^interbase$' \
	&& php-fpm -m | grep -oiE '^interbase$' \
	&& php -m | grep -oiE '^intl$' \
	&& php-fpm -m | grep -oiE '^intl$' \
	&& php -m | grep -oiE '^json$' \
	&& php-fpm -m | grep -oiE '^json$' \
	&& php -m | grep -oiE '^ldap$' \
	&& php-fpm -m | grep -oiE '^ldap$' \
	&& php -m | grep -oiE '^libxml$' \
	&& php-fpm -m | grep -oiE '^libxml$' \
	&& php -m | grep -oiE '^mbstring$' \
	&& php-fpm -m | grep -oiE '^mbstring$' \
	&& php -m | grep -oiE '^mcrypt$' \
	&& php-fpm -m | grep -oiE '^mcrypt$' \
	&& php -m | grep -oiE '^msgpack$' \
	&& php-fpm -m | grep -oiE '^msgpack$' \
	&& php -m | grep -oiE '^memcache$' \
	&& php-fpm -m | grep -oiE '^memcache$' \
	&& php -m | grep -oiE '^memcached$' \
	&& php-fpm -m | grep -oiE '^memcached$' \
	&& php -m | grep -oiE '^mongo$' \
	&& php-fpm -m | grep -oiE '^mongo$' \
	&& php -m | grep -oiE '^mysql$' \
	&& php-fpm -m | grep -oiE '^mysql$' \
	&& php -m | grep -oiE '^mysqli$' \
	&& php-fpm -m | grep -oiE '^mysqli$' \
	&& php -m | grep -oiE '^oauth$' \
	&& php-fpm -m | grep -oiE '^oauth$' \
	&& php -m | grep -oiE '^Zend Opcache$' \
	&& php-fpm -m | grep -oiE '^Zend Opcache$' \
	&& php -m | grep -oiE '^openssl$' \
	&& php-fpm -m | grep -oiE '^openssl$' \
	&& php -m | grep -oiE '^pcntl$' \
	&& php-fpm -m | grep -oiE '^pcntl$' \
	&& php -m | grep -oiE '^pcre$' \
	&& php-fpm -m | grep -oiE '^pcre$' \
	&& php -m | grep -oiE '^pdo$' \
	&& php-fpm -m | grep -oiE '^pdo$' \
	&& php -m | grep -oiE '^pdo_dblib$' \
	&& php-fpm -m | grep -oiE '^pdo_dblib$' \
	&& php -m | grep -oiE '^pdo_firebird$' \
	&& php-fpm -m | grep -oiE '^pdo_firebird$' \
	&& php -m | grep -oiE '^pdo_mysql$' \
	&& php-fpm -m | grep -oiE '^pdo_mysql$' \
	&& php -m | grep -oiE '^pdo_pgsql$' \
	&& php-fpm -m | grep -oiE '^pdo_pgsql$' \
	&& php -m | grep -oiE '^pdo_sqlite$' \
	&& php-fpm -m | grep -oiE '^pdo_sqlite$' \
	&& php -m | grep -oiE '^pgsql$' \
	&& php-fpm -m | grep -oiE '^pgsql$' \
	&& php -m | grep -oiE '^phar$' \
	&& php-fpm -m | grep -oiE '^phar$' \
	&& php -m | grep -oiE '^posix$' \
	&& php-fpm -m | grep -oiE '^posix$' \
	&& php -m | grep -oiE '^pspell$' \
	&& php-fpm -m | grep -oiE '^pspell$' \
	&& php -m | grep -oiE '^readline$' \
	&& php -m | grep -oiE '^recode$' \
	&& php-fpm -m | grep -oiE '^recode$' \
	&& php -m | grep -oiE '^redis$' \
	&& php-fpm -m | grep -oiE '^redis$' \
	&& php -m | grep -oiE '^reflection$' \
	&& php-fpm -m | grep -oiE '^reflection$' \
	&& php -m | grep -oiE '^session$' \
	&& php-fpm -m | grep -oiE '^session$' \
	&& php -m | grep -oiE '^shmop$' \
	&& php-fpm -m | grep -oiE '^shmop$' \
	&& php -m | grep -oiE '^simplexml$' \
	&& php-fpm -m | grep -oiE '^simplexml$' \
	&& php -m | grep -oiE '^snmp$' \
	&& php-fpm -m | grep -oiE '^snmp$' \
	&& php -m | grep -oiE '^soap$' \
	&& php-fpm -m | grep -oiE '^soap$' \
	&& php -m | grep -oiE '^sockets$' \
	&& php-fpm -m | grep -oiE '^sockets$' \
	&& php -m | grep -oiE '^spl$' \
	&& php-fpm -m | grep -oiE '^spl$' \
	&& php -m | grep -oiE '^sysvmsg$' \
	&& php-fpm -m | grep -oiE '^sysvmsg$' \
	&& php -m | grep -oiE '^sysvsem$' \
	&& php-fpm -m | grep -oiE '^sysvsem$' \
	&& php -m | grep -oiE '^sysvshm$' \
	&& php-fpm -m | grep -oiE '^sysvshm$' \
	&& php -m | grep -oiE '^tidy$' \
	&& php-fpm -m | grep -oiE '^tidy$' \
	&& php -m | grep -oiE '^tokenizer$' \
	&& php-fpm -m | grep -oiE '^tokenizer$' \
	&& php -m | grep -oiE '^uploadprogress$' \
	&& php-fpm -m | grep -oiE '^uploadprogress$' \
	&& php -m | grep -oiE '^wddx$' \
	&& php-fpm -m | grep -oiE '^wddx$' \
	&& php -m | grep -oiE '^xdebug$' \
	&& php-fpm -m | grep -oiE '^xdebug$' \
	&& php -m | grep -oiE '^xml$' \
	&& php-fpm -m | grep -oiE '^xml$' \
	&& php -m | grep -oiE '^xmlreader$' \
	&& php-fpm -m | grep -oiE '^xmlreader$' \
	&& php -m | grep -oiE '^xmlrpc$' \
	&& php-fpm -m | grep -oiE '^xmlrpc$' \
	&& php -m | grep -oiE '^xmlwriter$' \
	&& php-fpm -m | grep -oiE '^xmlwriter$' \
	&& php -m | grep -oiE '^xsl$' \
	&& php-fpm -m | grep -oiE '^xsl$' \
	&& php -m | grep -oiE '^zip$' \
	&& php-fpm -m | grep -oiE '^zip$' \
	&& true


# Deactive PSR and Phalcon:
# https://github.com/devilbox/docker-php-fpm/issues/201
RUN set -eux \
	&& rm -f /usr/local/etc/php/conf.d/docker-php-ext-phalcon.ini || true \
	&& rm -f /usr/local/etc/php/conf.d/docker-php-ext-psr.ini || true \


###
### Ports
###
EXPOSE 9000


###
### Entrypoint
###
CMD ["/usr/local/sbin/php-fpm"]
ENTRYPOINT ["/docker-entrypoint.sh"]
